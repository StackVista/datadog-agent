---
- name: Ubuntu18 automatic updates (wait for lock) (1/2)
  shell: "while fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 10; done;"
  become: yes
  when: (role != "integrations")

- name: Ubuntu18 automatic updates (wait for lock) (2/2)
  shell: "sleep 15; while fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 10; done;"
  become: yes
  when: (role != "integrations")

- name: Install provisioning dependencies (1/2)
  apt:
    name:
      python3-pip
    state: present
  become: yes
  register: pip3_res
  retries: 15
  delay: 5
  until: pip3_res is success

- name: Install provisioning dependencies (2/2)
  shell: pip3 install docker
  become: yes

- name: Docker login
  docker_login:
    registry: quay.io
    username: "{{ quay_user }}"
    password: "{{ quay_password }}"
    reauthorize: yes

- name: Copy docker compose file
  copy:
    src: files/docker-compose.yml
    dest: /home/ubuntu/
    mode: preserve
  when: (role == "integrations")

- name: Copy nagios files
  copy:
    src: files/nagios/{{item}}
    dest: /home/ubuntu/nagios/
    mode: preserve
  with_items:
    - Dockerfile
    - mysql.cfg
    - nagios.cfg
  when: (role == "integrations")

- name: Copy nagios config files
  copy:
    src: files/agent/nagios.d/conf.yaml
    dest: /home/ubuntu/agent/nagios.d/
    mode: preserve
  when: (role == "integrations")

- name: Copy agent integration config files
  copy:
    src: files/agent/agent_integration_sample.d/conf.yaml
    dest: /home/ubuntu/agent/agent_integration_sample.d/
    mode: preserve
  when: (role == "integrations")

- name: Copy Configuration files
  copy:
    src: "files/"
    dest: "/home/ubuntu"
    mode: preserve
  when: (role != "integrations")

- name: Copy Verify and Create Script file
  copy:
    src: ./../verify-or-create-topics.sh
    dest: /home/ubuntu
    mode: u+x

- name: Gather facts (we need the docker network interface ip)
  setup:

# Not included in integrations [DOCKER_HOST_IP]
- name: Configure .env file used by docker-compose
  copy:
    content: |
      AGENT_DOCKER_REPO={{ agent_docker_repo }}
      AGENT_VERSION={{ agent_current_branch }}
      DOCKER_HOST_IP={{ ansible_docker0['ipv4']['address'] }}
      STACKSTATE_BRANCH={{ stackstate_branch }}
    dest: /home/ubuntu/.env

- name: Run Docker compose
  command: docker-compose up -d
  args:
    chdir: /home/ubuntu/

- import_tasks: ../wait-for-receiver.yml
- import_tasks: ../wait-for-agent.yml

