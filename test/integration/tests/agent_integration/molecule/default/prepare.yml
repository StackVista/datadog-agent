---
- name: Prepare
  hosts: agent_vm
  gather_facts: false
  tasks:
    - name: Install python for Ansible
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal python-zipstream)
      become: true
      changed_when: false
    - name: Add StackState-Agent APT repository
      become: true
      apt_repository:
        repo: deb [trusted=yes] https://s3.amazonaws.com/stackstate-agent-test master main
    - name: Install StackState-Agent
      become: true
      apt:
        name: datadog-agent
        state: present
        allow_unauthenticated: yes
        update_cache: yes
    - name: Run StackState-Agent
      become: true
      systemd:
        name: datadog-agent
        state: started
        daemon_reload: yes
- name: Prepare
  hosts: receiver_vm
  gather_facts: false
  tasks:
    - name: Install python for Ansible
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal python-zipstream)
      become: true
      changed_when: false
    - name: Add Docker GPG key
      become: true
      apt_key: url=https://download.docker.com/linux/ubuntu/gpg
    - name: Add Docker APT repository
      become: true
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
    - name: Install list of packages
      become: true
      apt:
        name: [apt-transport-https, ca-certificates, curl, software-properties-common, docker-ce]
        state: present
        update_cache: yes
    - name: Add user to docker group
      become: true
      user:
        name: ubuntu
        groups: docker
        append: True
    - name: Reboot immediately if there was a change.
      shell: sleep 1; pkill -u {{ ansible_ssh_user }} sshd
      async: 3
      poll: 2
    - name: Wait for the reboot to complete if there was a change.
      wait_for_connection:
        connect_timeout: 20
        sleep: 5
        delay: 5
        timeout: 300
    - name: Install AWS-CLI
      apt:
        name: awscli
        state: present
      become: true
    - name: ensure aws config directory exists
      file:
        path: /home/ubuntu/.aws/
        recurse: yes
        state: directory
    - name: Configure aws credentials
      copy:
        content: |
          [default]
          aws_access_key_id = {{ lookup("env", "AWS_ACCESS_KEY_ID")}}
          aws_secret_access_key = {{ lookup("env", "AWS_SECRET_ACCESS_KEY")}}
        dest: /home/ubuntu/.aws/credentials
    - name: Configure aws config
      copy:
        content: |
          [default]
          region=eu-west-1
          output=json
        dest: /home/ubuntu/.aws/config
    - name: Run Docker login
      shell: eval $(aws ecr get-login --no-include-email)
    - name: Install Docker Compose
      become: true
      get_url:
        url: "https://github.com/docker/compose/releases/download/1.22.0/docker-compose-Linux-x86_64"
        dest: "/usr/local/bin/docker-compose"
        force: True
        mode: "0755"
    - name: Copy Docker Compose file
      copy:
        src: ../../../../docker-compose.yml
        dest: /home/ubuntu/docker-compose.yml
    - name: Use Docker Service to run
      command: docker-compose up -d
      args:
        chdir: /home/ubuntu/
